name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
      max-parallel: 2

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run unit tests
      run: npm run test:unit
      env:
        NODE_ENV: test
        CI: true

    - name: Run unit tests with coverage
      run: npm run test:coverage
      timeout-minutes: 15
      env:
        NODE_ENV: test
        CI: true

    - name: Run integration tests
      run: timeout 10m npm run test:integration
      timeout-minutes: 12
      env:
        NODE_ENV: test
        CI: true
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        GOOGLE_CUSTOM_SEARCH_API_KEY: ${{ secrets.GOOGLE_CUSTOM_SEARCH_API_KEY }}
        GOOGLE_CUSTOM_SEARCH_ID: ${{ secrets.GOOGLE_CUSTOM_SEARCH_ID }}

    - name: Run E2E tests (stdio)
      run: timeout 5m npm run test:e2e:stdio
      timeout-minutes: 7
      env:
        NODE_ENV: test
        CI: true
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        GOOGLE_CUSTOM_SEARCH_API_KEY: ${{ secrets.GOOGLE_CUSTOM_SEARCH_API_KEY }}
        GOOGLE_CUSTOM_SEARCH_ID: ${{ secrets.GOOGLE_CUSTOM_SEARCH_ID }}
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}

    - name: Run E2E tests (sse)
      run: timeout 5m npm run test:e2e:sse
      timeout-minutes: 7
      env:
        NODE_ENV: test
        CI: true
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        GOOGLE_CUSTOM_SEARCH_API_KEY: ${{ secrets.GOOGLE_CUSTOM_SEARCH_API_KEY }}
        GOOGLE_CUSTOM_SEARCH_ID: ${{ secrets.GOOGLE_CUSTOM_SEARCH_ID }}
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}

    - name: Run YouTube transcript E2E tests
      run: timeout 5m npm run test:e2e:youtube
      timeout-minutes: 7
      env:
        NODE_ENV: test
        CI: true
        GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}

    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          coverage/
          docs/testing/youtube-transcript-test-report.md

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check TypeScript compilation
      run: npm run build

    - name: Verify no TypeScript errors
      run: npx tsc --noEmit

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

    - name: Check for vulnerable dependencies
      run: npm audit --audit-level=moderate --summary

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run performance-focused tests
      run: npm test -- --testNamePattern="performance|timeout|speed"
      env:
        NODE_ENV: test

    - name: Run timeout tests
      run: timeout 8m npm run test:e2e:timeout
      env:
        NODE_ENV: test

  publish-ready:
    name: Verify Publish Readiness
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Test prepublish script
      run: npm run prepublishOnly

    - name: Verify package contents
      run: npm pack --dry-run

    - name: Check package size
      run: |
        PACKAGE_SIZE=$(npm pack --dry-run 2>&1 | grep "package size" | awk '{print $4}' | sed 's/B//')
        echo "Package size: ${PACKAGE_SIZE}B"
        if [ "$PACKAGE_SIZE" -gt 10485760 ]; then
          echo "❌ Package size too large (>10MB)"
          exit 1
        fi
        echo "✅ Package size acceptable"